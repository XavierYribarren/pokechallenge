import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";

export function Forest(props) {
  const { nodes, materials } = useGLTF("/pokeenv.glb");

const envIntensity = props.envIntensity

  return (
    <group {...props} dispose={null} position={props.position} rotation={props.rotation} scale={props.scale}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder022.geometry}
        material={materials.trunk}
        material-envMapIntensity={envIntensity}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Icosphere007.geometry}
        material={materials["Material.013"]}
        material-envMapIntensity={envIntensity}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Icosphere005.geometry}
        material={materials["Material.011"]}
       material-envMapIntensity={envIntensity}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Icosphere003.geometry}
        material={materials["Material.013"]}
       material-envMapIntensity={envIntensity}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Icosphere004.geometry}
        material={materials["Material.011"]}
       material-envMapIntensity={envIntensity}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Icosphere.geometry}
        material={materials["Material.011"]}
       material-envMapIntensity={envIntensity}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder015.geometry}
        material={materials.trunk}
       material-envMapIntensity={envIntensity}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Plane000.geometry}
        material={materials["Material.007"]}
       material-envMapIntensity={envIntensity}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Plane015.geometry}
        material={materials["grass 2"]}
       material-envMapIntensity={envIntensity}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Icosphere000.geometry}
        material={materials["Material.007"]}
       material-envMapIntensity={envIntensity}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Icosphere000_1.geometry}
        material={materials.trunk}
       material-envMapIntensity={envIntensity}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder022_1.geometry}
        material={materials.trunk}
       material-envMapIntensity={envIntensity}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder022_2.geometry}
        material={materials["Material.004"]}
       material-envMapIntensity={envIntensity}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder012_1.geometry}
        material={materials["Material.005"]}
       material-envMapIntensity={envIntensity}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder012_2.geometry}
        material={materials.trunk}
       material-envMapIntensity={envIntensity}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder009_1.geometry}
        material={materials.Material}
       material-envMapIntensity={envIntensity}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder009_2.geometry}
        material={materials.trunk}
       material-envMapIntensity={envIntensity}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder005.geometry}
        material={materials["Material.005"]}
       material-envMapIntensity={envIntensity}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder005_1.geometry}
        material={materials.trunk}
       material-envMapIntensity={envIntensity}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder003.geometry}
        material={materials.trunk}
       material-envMapIntensity={envIntensity}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder003_1.geometry}
        material={materials["Material.003"]}
       material-envMapIntensity={envIntensity}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder003_2.geometry}
        material={materials["Material.007"]}
       material-envMapIntensity={envIntensity}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder001_1.geometry}
        material={materials.trunk}
       material-envMapIntensity={envIntensity}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder001_2.geometry}
        material={materials.Material}
       material-envMapIntensity={envIntensity}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder_1.geometry}
        material={materials.Material}
       material-envMapIntensity={envIntensity}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder_2.geometry}
        material={materials.trunk}
       material-envMapIntensity={envIntensity}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder047.geometry}
        material={materials["mush 2"]}
       material-envMapIntensity={envIntensity}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder047_1.geometry}
        material={materials["mush 1"]}
       material-envMapIntensity={envIntensity}
      />
    </group>
  );
}

useGLTF.preload("/pokeenv.glb");
